{"version":3,"file":"feature-repository.js","names":["cacheSettings","staleTTL","cacheKey","backgroundSync","polyfills","fetch","globalThis","bind","undefined","SubtleCrypto","crypto","subtle","EventSource","localStorage","subscribedInstances","Map","cacheInitialized","cache","activeFetches","streams","supportsSSE","Set","setPolyfills","overrides","Object","assign","configureCache","clearAutoRefresh","clearCache","clear","updatePersistentCache","refreshFeatures","instance","timeout","skipCache","allowStale","updateInstance","data","fetchFeaturesWithCache","setFeaturesOnInstance","subscribe","key","getKey","subs","get","add","set","unsubscribe","forEach","s","delete","setItem","JSON","stringify","Array","from","entries","e","now","Date","initializeCache","existing","staleAt","fetchFeatures","startAutoRefresh","promiseTimeout","apiHost","clientKey","getApiInfo","promise","Promise","resolve","resolved","timer","finish","clearTimeout","setTimeout","then","catch","value","getItem","parsed","parse","isArray","onNewFeatureData","version","dateUpdated","instances","encryptedFeatures","setEncryptedFeatures","setFeatures","features","getFeatures","endpoint","res","headers","json","process","env","NODE_ENV","log","error","message","has","channel","src","cb","event","errors","onSSEError","addEventListener","onerror","readyState","destroyChannel","close"],"sources":["../../src/feature-repository.ts"],"sourcesContent":["import {\n  ApiHost,\n  CacheSettings,\n  ClientKey,\n  FeatureApiResponse,\n  Polyfills,\n  RepositoryKey,\n} from \"./types/growthbook\";\nimport type { GrowthBook } from \".\";\n\ntype CacheEntry = {\n  data: FeatureApiResponse;\n  version: string;\n  staleAt: Date;\n};\ntype ScopedChannel = {\n  src: EventSource;\n  cb: (event: MessageEvent<string>) => void;\n  errors: number;\n};\n\n// Config settings\nconst cacheSettings: CacheSettings = {\n  // Consider a fetch stale after 1 minute\n  staleTTL: 1000 * 60,\n  cacheKey: \"gbFeaturesCache\",\n  backgroundSync: true,\n};\nconst polyfills: Polyfills = {\n  fetch: globalThis.fetch ? globalThis.fetch.bind(globalThis) : undefined,\n  SubtleCrypto: globalThis.crypto ? globalThis.crypto.subtle : undefined,\n  EventSource: globalThis.EventSource,\n  localStorage: globalThis.localStorage,\n};\n\n// Global state\nconst subscribedInstances: Map<RepositoryKey, Set<GrowthBook>> = new Map();\nlet cacheInitialized = false;\nconst cache: Map<RepositoryKey, CacheEntry> = new Map();\nconst activeFetches: Map<\n  RepositoryKey,\n  Promise<FeatureApiResponse>\n> = new Map();\nconst streams: Map<RepositoryKey, ScopedChannel> = new Map();\nconst supportsSSE: Set<RepositoryKey> = new Set();\n\n// Public functions\nexport function setPolyfills(overrides: Partial<Polyfills>): void {\n  Object.assign(polyfills, overrides);\n}\nexport function configureCache(overrides: Partial<CacheSettings>): void {\n  Object.assign(cacheSettings, overrides);\n  if (!cacheSettings.backgroundSync) {\n    clearAutoRefresh();\n  }\n}\n\nexport async function clearCache(): Promise<void> {\n  cache.clear();\n  activeFetches.clear();\n  clearAutoRefresh();\n  cacheInitialized = false;\n  await updatePersistentCache();\n}\n\nexport async function refreshFeatures(\n  instance: GrowthBook,\n  timeout?: number,\n  skipCache?: boolean,\n  allowStale?: boolean,\n  updateInstance?: boolean\n): Promise<void> {\n  const data = await fetchFeaturesWithCache(\n    instance,\n    allowStale,\n    timeout,\n    skipCache\n  );\n  updateInstance && data && (await setFeaturesOnInstance(instance, data));\n}\n\n// Subscribe a GrowthBook instance to feature changes\nexport function subscribe(instance: GrowthBook): void {\n  const [key] = getKey(instance);\n  const subs = subscribedInstances.get(key) || new Set();\n  subs.add(instance);\n  subscribedInstances.set(key, subs);\n}\nexport function unsubscribe(instance: GrowthBook): void {\n  subscribedInstances.forEach((s) => s.delete(instance));\n}\n\n// Private functions\nasync function updatePersistentCache() {\n  try {\n    await polyfills.localStorage.setItem(\n      cacheSettings.cacheKey,\n      JSON.stringify(Array.from(cache.entries()))\n    );\n  } catch (e) {\n    // Ignore localStorage errors\n  }\n}\n\nasync function fetchFeaturesWithCache(\n  instance: GrowthBook,\n  allowStale?: boolean,\n  timeout?: number,\n  skipCache?: boolean\n): Promise<FeatureApiResponse | null> {\n  const [key] = getKey(instance);\n  const now = new Date();\n  await initializeCache();\n  const existing = cache.get(key);\n  if (existing && !skipCache && (allowStale || existing.staleAt > now)) {\n    // Reload features in the backgroud if stale\n    if (existing.staleAt < now) {\n      fetchFeatures(instance);\n    }\n    // Otherwise, if we don't need to refresh now, start a background sync\n    else {\n      startAutoRefresh(instance);\n    }\n    return existing.data;\n  } else {\n    const data = await promiseTimeout(fetchFeatures(instance), timeout);\n    return data;\n  }\n}\n\nfunction getKey(instance: GrowthBook): [RepositoryKey, ApiHost, ClientKey] {\n  const [apiHost, clientKey] = instance.getApiInfo();\n  return [`${apiHost}||${clientKey}`, apiHost, clientKey];\n}\n\n// Guarantee the promise always resolves within {timeout} ms\n// Resolved value will be `null` when there's an error or it takes too long\n// Note: The promise will continue running in the background, even if the timeout is hit\nfunction promiseTimeout<T>(\n  promise: Promise<T>,\n  timeout?: number\n): Promise<T | null> {\n  return new Promise((resolve) => {\n    let resolved = false;\n    let timer: unknown;\n    const finish = (data?: T) => {\n      if (resolved) return;\n      resolved = true;\n      timer && clearTimeout(timer as NodeJS.Timer);\n      resolve(data || null);\n    };\n\n    if (timeout) {\n      timer = setTimeout(() => finish(), timeout);\n    }\n\n    promise.then((data) => finish(data)).catch(() => finish());\n  });\n}\n\n// Populate cache from localStorage (if available)\nasync function initializeCache(): Promise<void> {\n  if (cacheInitialized) return;\n  cacheInitialized = true;\n  if (polyfills.localStorage) {\n    try {\n      const value = await polyfills.localStorage.getItem(\n        cacheSettings.cacheKey\n      );\n      if (value) {\n        const parsed: [RepositoryKey, CacheEntry][] = JSON.parse(value);\n        if (parsed && Array.isArray(parsed)) {\n          parsed.forEach(([key, data]) => {\n            cache.set(key, {\n              ...data,\n              staleAt: new Date(data.staleAt),\n            });\n          });\n        }\n      }\n    } catch (e) {\n      // Ignore localStorage errors\n    }\n  }\n}\n\n// Called whenever new features are fetched from the API\nfunction onNewFeatureData(key: RepositoryKey, data: FeatureApiResponse): void {\n  // If contents haven't changed, ignore the update, extend the stale TTL\n  const version = data.dateUpdated || \"\";\n  const staleAt = new Date(Date.now() + cacheSettings.staleTTL);\n  const existing = cache.get(key);\n  if (existing && version && existing.version === version) {\n    existing.staleAt = staleAt;\n    return;\n  }\n\n  // Update in-memory cache\n  cache.set(key, {\n    data,\n    version,\n    staleAt,\n  });\n  // Update local storage (don't await this, just update asynchronously)\n  updatePersistentCache();\n\n  // Update features for all subscribed GrowthBook instances\n  const instances = subscribedInstances.get(key);\n  instances &&\n    instances.forEach((instance) => setFeaturesOnInstance(instance, data));\n}\n\nasync function setFeaturesOnInstance(\n  instance: GrowthBook,\n  data: FeatureApiResponse\n): Promise<void> {\n  await (data.encryptedFeatures\n    ? instance.setEncryptedFeatures(\n        data.encryptedFeatures,\n        undefined,\n        polyfills.SubtleCrypto\n      )\n    : instance.setFeatures(data.features || instance.getFeatures()));\n}\n\nasync function fetchFeatures(\n  instance: GrowthBook\n): Promise<FeatureApiResponse> {\n  const [key, apiHost, clientKey] = getKey(instance);\n  const endpoint = apiHost + \"/api/features/\" + clientKey;\n\n  let promise = activeFetches.get(key);\n  if (!promise) {\n    promise = (polyfills.fetch as typeof globalThis.fetch)(endpoint)\n      // TODO: auto-retry if status code indicates a temporary error\n      .then((res) => {\n        if (res.headers.get(\"x-sse-support\") === \"enabled\") {\n          supportsSSE.add(key);\n        }\n        return res.json();\n      })\n      .then((data: FeatureApiResponse) => {\n        onNewFeatureData(key, data);\n        startAutoRefresh(instance);\n        activeFetches.delete(key);\n        return data;\n      })\n      .catch((e) => {\n        process.env.NODE_ENV !== \"production\" &&\n          instance.log(\"Error fetching features\", {\n            apiHost,\n            clientKey,\n            error: e ? e.message : null,\n          });\n        activeFetches.delete(key);\n        return Promise.resolve({});\n      });\n    activeFetches.set(key, promise);\n  }\n  return await promise;\n}\n\n// Watch a feature endpoint for changes\n// Will prefer SSE if enabled, otherwise fall back to cron\nfunction startAutoRefresh(instance: GrowthBook) {\n  const [key, apiHost, clientKey] = getKey(instance);\n  if (\n    cacheSettings.backgroundSync &&\n    supportsSSE.has(key) &&\n    polyfills.EventSource\n  ) {\n    if (streams.has(key)) return;\n    const channel: ScopedChannel = {\n      src: new polyfills.EventSource(`${apiHost}/sub/${clientKey}`),\n      cb: (event: MessageEvent<string>) => {\n        try {\n          const json: FeatureApiResponse = JSON.parse(event.data);\n          onNewFeatureData(key, json);\n          // Reset error count on success\n          channel.errors = 0;\n        } catch (e) {\n          process.env.NODE_ENV !== \"production\" &&\n            instance.log(\"SSE Error\", {\n              apiHost,\n              clientKey,\n              error: e ? (e as Error).message : null,\n            });\n          onSSEError(channel, key);\n        }\n      },\n      errors: 0,\n    };\n    streams.set(key, channel);\n    channel.src.addEventListener(\"features\", channel.cb);\n\n    channel.src.onerror = () => {\n      onSSEError(channel, key);\n    };\n  }\n}\n\nfunction onSSEError(channel: ScopedChannel, key: RepositoryKey) {\n  channel.errors++;\n  if (channel.errors > 3 || channel.src.readyState === 2) {\n    destroyChannel(channel, key);\n  }\n}\n\nfunction destroyChannel(channel: ScopedChannel, key: RepositoryKey) {\n  channel.src.onerror = null;\n  channel.src.close();\n  streams.delete(key);\n}\n\nfunction clearAutoRefresh() {\n  // Clear list of which keys are auto-updated\n  supportsSSE.clear();\n\n  // Stop listening for any SSE events\n  streams.forEach(destroyChannel);\n\n  // Remove all references to GrowthBook instances\n  subscribedInstances.clear();\n}\n"],"mappings":"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"}